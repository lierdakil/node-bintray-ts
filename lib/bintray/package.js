"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const hasAttrs_1 = require("./hasAttrs");
const version_1 = require("./version");
class Package extends hasAttrs_1.HasAttrs {
    constructor(subject, repo, pkg, rest) {
        super(`/packages/${subject}/${repo}`, pkg, rest);
        this.subject = subject;
        this.repo = repo;
        this.pkg = pkg;
        this.version = (version = '_latest') => new version_1.Version(this.subject, this.repo, this.pkg, version, this.rest);
    }
}
exports.Package = Package;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFja2FnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9iaW50cmF5L3BhY2thZ2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx5Q0FBcUM7QUFFckMsdUNBQW1DO0FBMkNuQyxNQUFhLE9BQVEsU0FBUSxtQkFBa0M7SUFDN0QsWUFDVSxPQUFlLEVBQ2YsSUFBWSxFQUNaLEdBQVcsRUFDbkIsSUFBVTtRQUVWLEtBQUssQ0FBQyxhQUFhLE9BQU8sSUFBSSxJQUFJLEVBQUUsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUE7UUFMeEMsWUFBTyxHQUFQLE9BQU8sQ0FBUTtRQUNmLFNBQUksR0FBSixJQUFJLENBQVE7UUFDWixRQUFHLEdBQUgsR0FBRyxDQUFRO1FBTWQsWUFBTyxHQUFHLENBQUMsT0FBTyxHQUFHLFNBQVMsRUFBRSxFQUFFLENBQ3ZDLElBQUksaUJBQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO0lBSHBFLENBQUM7Q0FJRjtBQVpELDBCQVlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSGFzQXR0cnMgfSBmcm9tICcuL2hhc0F0dHJzJ1xuaW1wb3J0IHsgUmVzdCB9IGZyb20gJy4vcmVzdCdcbmltcG9ydCB7IFZlcnNpb24gfSBmcm9tICcuL3ZlcnNpb24nXG5cbmV4cG9ydCBpbnRlcmZhY2UgUGFja2FnZUluZm8ge1xuICBuYW1lOiBzdHJpbmdcbiAgcmVwbzogc3RyaW5nXG4gIG93bmVyOiBzdHJpbmdcbiAgZGVzYzogc3RyaW5nXG4gIGxhYmVsczogc3RyaW5nW11cbiAgYXR0cmlidXRlX25hbWVzOiBzdHJpbmdbXVxuICBsaWNlbnNlczogTGljZW5zZVtdXG4gIGN1c3RvbV9saWNlbnNlczogc3RyaW5nW11cbiAgZm9sbG93ZXJzX2NvdW50OiBudW1iZXJcbiAgY3JlYXRlZDogc3RyaW5nIC8vIElTTyBkYXRlIHN0cmluZ1xuICB3ZWJzaXRlX3VybDogc3RyaW5nXG4gIGlzc3VlX3RyYWNrZXJfdXJsOiBzdHJpbmdcbiAgZ2l0aHViX3JlcG86IHN0cmluZ1xuICBnaXRodWJfcmVsZWFzZV9ub3Rlc19maWxlOiBzdHJpbmdcbiAgcHVibGljX2Rvd25sb2FkX251bWJlcnM6IGJvb2xlYW5cbiAgcHVibGljX3N0YXRzOiBib29sZWFuXG4gIGxpbmtlZF90b19yZXBvczogc3RyaW5nW11cbiAgdmVyc2lvbnM6IHN0cmluZ1tdXG4gIGxhdGVzdF92ZXJzaW9uOiBzdHJpbmdcbiAgdXBkYXRlZDogc3RyaW5nIC8vIElTTyBkYXRlXG4gIHJhdGluZ19jb3VudDogbnVtYmVyXG4gIHN5c3RlbV9pZHM6IHN0cmluZ1tdXG4gIHZjc191cmw6IHN0cmluZ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFBhY2thZ2VEYXRhIHtcbiAgbmFtZTogc3RyaW5nXG4gIGRlc2M/OiBzdHJpbmdcbiAgbGFiZWxzPzogc3RyaW5nW11cbiAgbGljZW5zZXM6IExpY2Vuc2VbXVxuICBjdXN0b21fbGljZW5zZXM/OiBzdHJpbmdbXVxuICB2Y3NfdXJsOiBzdHJpbmdcbiAgd2Vic2l0ZV91cmw/OiBzdHJpbmdcbiAgaXNzdWVfdHJhY2tlcl91cmw/OiBzdHJpbmdcbiAgZ2l0aHViX3JlcG8/OiBzdHJpbmdcbiAgZ2l0aHViX3JlbGVhc2Vfbm90ZXNfZmlsZT86IHN0cmluZ1xuICBwdWJsaWNfZG93bmxvYWRfbnVtYmVycz86IGJvb2xlYW5cbiAgcHVibGljX3N0YXRzPzogYm9vbGVhblxufVxuXG5leHBvcnQgY2xhc3MgUGFja2FnZSBleHRlbmRzIEhhc0F0dHJzPFBhY2thZ2VJbmZvLCBQYWNrYWdlRGF0YT4ge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHN1YmplY3Q6IHN0cmluZyxcbiAgICBwcml2YXRlIHJlcG86IHN0cmluZyxcbiAgICBwcml2YXRlIHBrZzogc3RyaW5nLFxuICAgIHJlc3Q6IFJlc3QsXG4gICkge1xuICAgIHN1cGVyKGAvcGFja2FnZXMvJHtzdWJqZWN0fS8ke3JlcG99YCwgcGtnLCByZXN0KVxuICB9XG5cbiAgcHVibGljIHZlcnNpb24gPSAodmVyc2lvbiA9ICdfbGF0ZXN0JykgPT5cbiAgICBuZXcgVmVyc2lvbih0aGlzLnN1YmplY3QsIHRoaXMucmVwbywgdGhpcy5wa2csIHZlcnNpb24sIHRoaXMucmVzdClcbn1cblxuZXhwb3J0IHR5cGUgTGljZW5zZSA9XG4gIHwgJ0FGTC0yLjEnXG4gIHwgJ0FGTC0zLjAnXG4gIHwgJ0FHUEwtVjMnXG4gIHwgJ0FwYWNoZS0xLjAnXG4gIHwgJ0FwYWNoZS0xLjEnXG4gIHwgJ0FwYWNoZS0yLjAnXG4gIHwgJ0FQTC0xLjAnXG4gIHwgJ0FQU0wtMi4wJ1xuICB8ICdBcnRpc3RpYy1MaWNlbnNlLTIuMCdcbiAgfCAnQXR0cmlidXRpb24nXG4gIHwgJ0JvdW5jeS1DYXN0bGUnXG4gIHwgJ0JTRCdcbiAgfCAnQlNEIDItQ2xhdXNlJ1xuICB8ICdCU0QgMy1DbGF1c2UnXG4gIHwgJ0JTTC0xLjAnXG4gIHwgJ0NBLVRPU0wtMS4xJ1xuICB8ICdDQzAtMS4wJ1xuICB8ICdDRERMLTEuMCdcbiAgfCAnQ29kZWhhdXMnXG4gIHwgJ0NQQUwtMS4wJ1xuICB8ICdDUEwtMS4wJ1xuICB8ICdDUE9MLTEuMDInXG4gIHwgJ0NVQU9GRklDRS0xLjAnXG4gIHwgJ0RheSdcbiAgfCAnRGF5LUFkZGVuZHVtJ1xuICB8ICdFQ0wyJ1xuICB8ICdFaWZmZWwtMi4wJ1xuICB8ICdFbnRlc3NhLTEuMCdcbiAgfCAnRVBMLTEuMCdcbiAgfCAnRVBMLTIuMCdcbiAgfCAnRVVEQVRBR1JJRCdcbiAgfCAnRVVQTC0xLjEnXG4gIHwgJ0VVUEwtMS4yJ1xuICB8ICdGYWlyJ1xuICB8ICdGYWNlYm9vay1QbGF0Zm9ybSdcbiAgfCAnRnJhbWV3b3J4LTEuMCdcbiAgfCAnR28nXG4gIHwgJ0dQTC0yLjAnXG4gIHwgJ0dQTC0yLjArQ0UnXG4gIHwgJ0dQTC0zLjAnXG4gIHwgJ0hpc3RvcmljYWwnXG4gIHwgJ0hTUUxEQidcbiAgfCAnSUJNUEwtMS4wJ1xuICB8ICdJSkcnXG4gIHwgJ0ltYWdlTWFnaWNrJ1xuICB8ICdJUEFGb250LTEuMCdcbiAgfCAnSVNDJ1xuICB8ICdJVS1FeHRyZW1lLTEuMS4xJ1xuICB8ICdKQS1TSUcnXG4gIHwgJ0pTT04nXG4gIHwgJ0pUaWR5J1xuICB8ICdMR1BMLTIuMCdcbiAgfCAnTEdQTC0yLjEnXG4gIHwgJ0xHUEwtMy4wJ1xuICB8ICdMaWJwbmcnXG4gIHwgJ0xQUEwtMS4wJ1xuICB8ICdMdWNlbnQtMS4wMidcbiAgfCAnTWlyT1MnXG4gIHwgJ01JVCdcbiAgfCAnTW90b3NvdG8tMC45LjEnXG4gIHwgJ01vemlsbGEtMS4xJ1xuICB8ICdNUEwtMi4wJ1xuICB8ICdNUy1QTCdcbiAgfCAnTVMtUkwnXG4gIHwgJ011bHRpY3MnXG4gIHwgJ05BU0EtMS4zJ1xuICB8ICdOQVVNRU4nXG4gIHwgJ05DU0EnXG4gIHwgJ05ldGhhY2snXG4gIHwgJ05va2lhLTEuMGEnXG4gIHwgJ05PU0wtMy4wJ1xuICB8ICdOVFAnXG4gIHwgJ05Vbml0LTIuNi4zJ1xuICB8ICdOVW5pdC1UZXN0LUFkYXB0ZXItMi42LjMnXG4gIHwgJ09DTEMtMi4wJ1xuICB8ICdPcGVuZm9udC0xLjEnXG4gIHwgJ09wZW5ncm91cCdcbiAgfCAnT3BlblNTTCdcbiAgfCAnT1NMLTMuMCdcbiAgfCAnUEhQLTMuMCdcbiAgfCAnUG9zdGdyZVNRTCdcbiAgfCAnUHVibGljIERvbWFpbidcbiAgfCAnUHVibGljIERvbWFpbiAtIFNVTidcbiAgfCAnUHl0aG9uUEwnXG4gIHwgJ1B5dGhvblNvZnRGb3VuZGF0aW9uJ1xuICB8ICdRVFBMLTEuMCdcbiAgfCAnUmVhbC0xLjAnXG4gIHwgJ1JpY29oUEwnXG4gIHwgJ1JQTC0xLjUnXG4gIHwgJ1NjYWxhJ1xuICB8ICdTaW1QTC0yLjAnXG4gIHwgJ1NsZWVweWNhdCdcbiAgfCAnU1VOUHVibGljLTEuMCdcbiAgfCAnU3liYXNlLTEuMCdcbiAgfCAnVE1hdGUnXG4gIHwgJ1VuaWNvZGUtREZTLTIwMTUnXG4gIHwgJ1VubGljZW5zZSdcbiAgfCAnVW9JLU5DU0EnXG4gIHwgJ1VQTC0xLjAnXG4gIHwgJ1ZJTSBMaWNlbnNlJ1xuICB8ICdWb3ZpZGFQTC0xLjAnXG4gIHwgJ1czQydcbiAgfCAnV1RGUEwnXG4gIHwgJ3d4V2luZG93cydcbiAgfCAnWG5ldCdcbiAgfCAnWkxJQidcbiAgfCAnWlBMLTIuMCdcbiJdfQ==